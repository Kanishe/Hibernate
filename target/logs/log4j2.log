08 Ð¸ÑŽÐ½. 2020 20:55:01,032  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 20:55:01,200  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 20:55:01,730  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 20:55:01,848  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 20:55:01,849  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 20:55:01,850  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:124) - HHH10001001: Connection properties: {password=****, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 20:55:01,850  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 20:55:01,853  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 20:55:02,107  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 20:55:02,823  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ed9f7b1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 20:55:03,164  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:13:29,045  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 21:13:29,211  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 21:13:29,745  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 21:13:29,888  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 21:13:29,889  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:13:29,890  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:124) - HHH10001001: Connection properties: {password=****, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 21:13:29,890  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 21:13:29,894  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 21:13:30,148  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 21:13:30,904  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ed9f7b1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 21:13:31,179  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:20:28,509  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 21:20:28,701  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 21:20:29,295  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 21:20:29,435  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 21:20:29,436  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:20:29,437  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:124) - HHH10001001: Connection properties: {password=****, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 21:20:29,438  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 21:20:29,440  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 21:20:29,697  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 21:20:30,484  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4ed9f7b1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 21:20:30,794  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:22:20,480  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 21:22:20,536  [[34mDEBUG[m] [main] (LoggerProviders.java|:158) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
 08 Ð¸ÑŽÐ½. 2020 21:22:20,561  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:22:20,564  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:22:20,571  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 08 Ð¸ÑŽÐ½. 2020 21:22:20,660  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 21:22:20,663  [[34mDEBUG[m] [main] (Environment.java|:199) - HHH000206: hibernate.properties not found
 08 Ð¸ÑŽÐ½. 2020 21:22:20,907  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:57) - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
 08 Ð¸ÑŽÐ½. 2020 21:22:20,908  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:85) - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
 08 Ð¸ÑŽÐ½. 2020 21:22:20,914  [[34mDEBUG[m] [main] (JaxbCfgProcessor.java|:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
 08 Ð¸ÑŽÐ½. 2020 21:22:21,213  [[34mDEBUG[m] [main] (ServiceBinding.java|:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,230  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:118) - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
 08 Ð¸ÑŽÐ½. 2020 21:22:21,231  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:49) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 08 Ð¸ÑŽÐ½. 2020 21:22:21,257  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,292  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:22:21,293  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:22:21,293  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:22:21,294  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15deb1dc
 08 Ð¸ÑŽÐ½. 2020 21:22:21,295  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a45c42a
 08 Ð¸ÑŽÐ½. 2020 21:22:21,296  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration yes_no -> org.hibernate.type.YesNoType@27a0a5a2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,297  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,298  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,298  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,299  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:22:21,300  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:22:21,300  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:22:21,301  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:22:21,302  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:22:21,302  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:22:21,303  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:22:21,303  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration int -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:22:21,304  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:22:21,305  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,306  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,306  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,308  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,308  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,309  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,310  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:22:21,311  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:22:21,311  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:22:21,312  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:22:21,313  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:22:21,314  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,315  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,316  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration string -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:22:21,317  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:22:21,318  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c05a54d
 08 Ð¸ÑŽÐ½. 2020 21:22:21,319  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10567255
 08 Ð¸ÑŽÐ½. 2020 21:22:21,320  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration url -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:22:21,320  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:22:21,322  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:22:21,323  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:22:21,335  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:22:21,336  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:22:21,337  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:22:21,338  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:22:21,339  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,339  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:22:21,340  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:22:21,342  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:22:21,347  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:22:21,347  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:22:21,350  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:22:21,350  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:22:21,352  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:22:21,352  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:22:21,353  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:22:21,354  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:22:21,355  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:22:21,355  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:22:21,357  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,358  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,358  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:22:21,360  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e8823d2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,362  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,362  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,362  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,363  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30272916
 08 Ð¸ÑŽÐ½. 2020 21:22:21,365  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,365  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,368  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:22:21,368  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:22:21,370  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:22:21,371  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:22:21,372  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,372  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,373  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:22:21,373  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:22:21,374  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@232024b9
 08 Ð¸ÑŽÐ½. 2020 21:22:21,375  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration binary -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:22:21,375  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:22:21,376  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [B -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:22:21,377  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:22:21,377  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:22:21,377  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:22:21,378  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration row_version -> org.hibernate.type.RowVersionType@350b3a17
 08 Ð¸ÑŽÐ½. 2020 21:22:21,379  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration image -> org.hibernate.type.ImageType@1ea9f009
 08 Ð¸ÑŽÐ½. 2020 21:22:21,380  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration characters -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:22:21,380  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char[] -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:22:21,380  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [C -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:22:21,381  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,382  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,382  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,382  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration text -> org.hibernate.type.TextType@7d2a6eac
 08 Ð¸ÑŽÐ½. 2020 21:22:21,383  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ntext -> org.hibernate.type.NTextType@6aa648b9
 08 Ð¸ÑŽÐ½. 2020 21:22:21,384  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,384  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,385  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48d7ad8b
 08 Ð¸ÑŽÐ½. 2020 21:22:21,386  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:22:21,387  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:22:21,388  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nclob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:22:21,389  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:22:21,389  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@737edcfa
 08 Ð¸ÑŽÐ½. 2020 21:22:21,390  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3359c978
 08 Ð¸ÑŽÐ½. 2020 21:22:21,391  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration serializable -> org.hibernate.type.SerializableType@4010d494
 08 Ð¸ÑŽÐ½. 2020 21:22:21,394  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:22:21,394  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:22:21,395  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e63cad
 08 Ð¸ÑŽÐ½. 2020 21:22:21,395  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6759f091
 08 Ð¸ÑŽÐ½. 2020 21:22:21,395  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33a053d
 08 Ð¸ÑŽÐ½. 2020 21:22:21,395  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14a54ef6
 08 Ð¸ÑŽÐ½. 2020 21:22:21,396  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20921b9b
 08 Ð¸ÑŽÐ½. 2020 21:22:21,396  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@867ba60
 08 Ð¸ÑŽÐ½. 2020 21:22:21,396  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ba745bc
 08 Ð¸ÑŽÐ½. 2020 21:22:21,397  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@654b72c0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,428  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,429  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,430  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,431  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,431  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,432  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,433  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,435  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,437  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,437  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,439  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,439  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,440  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,441  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,448  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 21:22:21,448  [[34mDEBUG[m] [main] (DriverManagerConnectionProviderImpl.java|:143) - No driver class specified
 08 Ð¸ÑŽÐ½. 2020 21:22:21,449  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,450  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:121) - HHH10001001: Connection properties: {password=admin, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,450  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,453  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Initializing Connection pool with 1 Connections
 08 Ð¸ÑŽÐ½. 2020 21:22:21,454  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 21:22:21,714  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:72) - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,715  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:83) - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:22:21,715  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:389) - JDBC version : 4.2
 08 Ð¸ÑŽÐ½. 2020 21:22:21,735  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 21:22:21,752  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:113) - JDBC driver metadata reported database stores quoted identifiers in more than one case
 08 Ð¸ÑŽÐ½. 2020 21:22:21,783  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:187) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
 08 Ð¸ÑŽÐ½. 2020 21:22:21,812  [[34mDEBUG[m] [main] (Namespace.java|:51) - Created database namespace [logicalName=Name{catalog=null, schema=testhibernate}, physicalName=Name{catalog=null, schema=testhibernate}]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,815  [[34mDEBUG[m] [main] (TypeConfiguration.java|:152) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cec79d3]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,870  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:22:21,891  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,897  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Author
 08 Ð¸ÑŽÐ½. 2020 21:22:21,904  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Author on table Author
 08 Ð¸ÑŽÐ½. 2020 21:22:21,923  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,926  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,928  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,931  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,933  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,935  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:22:21,936  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,936  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,936  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:name]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,936  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,937  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,970  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=second_name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,971  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property second_name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,971  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:second_name]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,971  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,972  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property second_name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,975  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:22:21,975  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,976  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Book
 08 Ð¸ÑŽÐ½. 2020 21:22:21,976  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Book on table Book
 08 Ð¸ÑŽÐ½. 2020 21:22:21,977  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,977  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,978  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,978  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,979  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,979  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:22:21,980  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,980  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property author_id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,980  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:author_id]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,980  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,981  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property author_id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,981  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:22:21,981  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:22:21,981  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:name]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,982  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,982  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,983  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,984  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,984  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,984  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,984  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:22:21,984  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:22:21,985  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [author]
 08 Ð¸ÑŽÐ½. 2020 21:22:21,986  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [book]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,024  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:207) - Building session factory
 08 Ð¸ÑŽÐ½. 2020 21:22:22,025  [[34mDEBUG[m] [main] (Settings.java|:68) - SessionFactory name : null
 08 Ð¸ÑŽÐ½. 2020 21:22:22,025  [[34mDEBUG[m] [main] (Settings.java|:69) - Automatic flush during beforeCompletion(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,026  [[34mDEBUG[m] [main] (Settings.java|:70) - Automatic session close at end of transaction: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,026  [[34mDEBUG[m] [main] (Settings.java|:72) - Statistics: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,026  [[34mDEBUG[m] [main] (Settings.java|:74) - Deleted entity synthetic identifier rollback: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,026  [[34mDEBUG[m] [main] (Settings.java|:75) - Default entity-mode: pojo
 08 Ð¸ÑŽÐ½. 2020 21:22:22,027  [[34mDEBUG[m] [main] (Settings.java|:76) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,027  [[34mDEBUG[m] [main] (Settings.java|:77) - Allow initialization of lazy state outside session : disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,027  [[34mDEBUG[m] [main] (Settings.java|:79) - Using BatchFetchStyle : LEGACY
 08 Ð¸ÑŽÐ½. 2020 21:22:22,027  [[34mDEBUG[m] [main] (Settings.java|:80) - Default batch fetch size: -1
 08 Ð¸ÑŽÐ½. 2020 21:22:22,027  [[34mDEBUG[m] [main] (Settings.java|:81) - Maximum outer join fetch depth: 2
 08 Ð¸ÑŽÐ½. 2020 21:22:22,028  [[34mDEBUG[m] [main] (Settings.java|:82) - Default null ordering: NONE
 08 Ð¸ÑŽÐ½. 2020 21:22:22,028  [[34mDEBUG[m] [main] (Settings.java|:83) - Order SQL updates by primary key: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,028  [[34mDEBUG[m] [main] (Settings.java|:84) - Order SQL inserts for batching: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,028  [[34mDEBUG[m] [main] (Settings.java|:86) - multi-tenancy strategy : NONE
 08 Ð¸ÑŽÐ½. 2020 21:22:22,028  [[34mDEBUG[m] [main] (Settings.java|:88) - JTA Track by Thread: enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:90) - Query language substitutions: {}
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:91) - Named query checking : enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:93) - Second-level cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:94) - Second-level query cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:95) - Second-level query cache factory: null
 08 Ð¸ÑŽÐ½. 2020 21:22:22,029  [[34mDEBUG[m] [main] (Settings.java|:96) - Second-level cache region prefix: null
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:97) - Optimize second-level cache for minimal puts: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:98) - Structured second-level cache entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:99) - Second-level cache direct-reference entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:100) - Automatic eviction of collection cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:102) - JDBC batch size: 15
 08 Ð¸ÑŽÐ½. 2020 21:22:22,030  [[34mDEBUG[m] [main] (Settings.java|:103) - JDBC batch updates for versioned data: enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:104) - Scrollable result sets: enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:105) - Wrap result sets: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:106) - JDBC3 getGeneratedKeys(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:107) - JDBC result set fetch size: null
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:108) - Connection release mode: AFTER_TRANSACTION
 08 Ð¸ÑŽÐ½. 2020 21:22:22,031  [[34mDEBUG[m] [main] (Settings.java|:109) - Generate SQL with comments: disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,032  [[34mDEBUG[m] [main] (Settings.java|:111) - JPA compliance - query : disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,032  [[34mDEBUG[m] [main] (Settings.java|:112) - JPA compliance - closed-handling : disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,032  [[34mDEBUG[m] [main] (Settings.java|:113) - JPA compliance - lists : disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,032  [[34mDEBUG[m] [main] (Settings.java|:114) - JPA compliance - transactions : disabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,097  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:262) - Session factory constructed with filter configurations : {}
 08 Ð¸ÑŽÐ½. 2020 21:22:22,097  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:263) - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.connection.characterEncoding=utf8, java.specification.version=13, sun.jnu.encoding=UTF-8, java.class.path=/Users/aka/IdeaProjects/Hibernate/out/production/classes:/Users/aka/IdeaProjects/Hibernate/out/production/resources:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.4.10.Final/365690f87b040dc5d22cc24a4daff76d1cffef23/hibernate-core-5.4.10.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/mysql/mysql-connector-java/8.0.20/d8d388e71c823570662a45dd33f4284141921280/mysql-connector-java-8.0.20.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.13.3/4e857439fc4fe974d212adaaaa3b118b8b50e3ec/log4j-core-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.13.3/ec1508160b93d274b1add34419b897bae84c6ca9/log4j-api-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.0.Final/700aeedc4a2089816621948f0379e17cbd17d5db/hibernate-commons-annotations-5.1.0.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.3.2.Final/3789d00e859632e6c6206adc0c71625559e6e3b0/jboss-logging-3.3.2.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.persistence/javax.persistence-api/2.2/25665ac8c0b62f50e6488173233239120fc52c96/javax.persistence-api-2.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.javassist/javassist/3.24.0-GA/d7466fc2e3af7c023e95c510f06448ad29b225b3/javassist-3.24.0-GA.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.10.2/7e575b4d8eb3041728fb7dac4fa09bf163c5ee9/byte-buddy-1.10.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/antlr/antlr/2.7.7/83cd2cd674a217ade95a4bb83a8a14f351f48bd0/antlr-2.7.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.spec.javax.transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/a8485cab9484dda36e9a8c319e76b5cc18797b58/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss/jandex/2.1.1.Final/c89aa5564fea8b08b9b41f0bbcabb8fed0d89c0d/jandex-2.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.1/dd6dda9da676a54c5b36ca2806ff95ee017d8738/jaxb-runtime-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.3.1/8531ad5ac454cc2deb9d4d32c40c4d7451939b5d/jaxb-api-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.activation/javax.activation-api/1.2.0/85262acf3ca9816f9537ca47d5adeabaead7cb16/javax.activation-api-1.2.0.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.dom4j/dom4j/2.1.1/3dce5dbb3571aa820c677fadd8349bfa8f00c199/dom4j-2.1.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.google.protobuf/protobuf-java/3.6.1/d06d46ecfd92ec6d0f3b423b4cd81cb38d8b924/protobuf-java-3.6.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.1/a09d2c48d3285f206fafbffe0e50619284e92126/txw2-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.7/c197c86ceec7318b1284bffb49b54226ca774003/istack-commons-runtime-3.0.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jvnet.staxex/stax-ex/1.8/8cc35f73da321c29973191f2cf143d29d26a1df7/stax-ex-1.8.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.xml.fastinfoset/FastInfoset/1.2.15/bb7b7ec0379982b97c62cd17465cb6d9155f68e8/FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=13, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/lib, sun.java.command=Start, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/aka, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, connection.password=admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=13.0.2+8, user.name=aka, path.separator=:, hibernate.connection.username=****, os.version=10.15.5, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, default_schema=testhibernate, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/63/k24jw8mj5s56_mywcdg2zgnr0000gn/T/, java.version=13.0.2, user.dir=/Users/aka/IdeaProjects/Hibernate, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.default_schema=testhibernate, hibernate.connection.password=****, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6944e53e, java.library.path=/Users/aka/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=57.0}
 08 Ð¸ÑŽÐ½. 2020 21:22:22,111  [[34mDEBUG[m] [main] (JaccIntegrator.java|:80) - Skipping JACC integration as it was not enabled
 08 Ð¸ÑŽÐ½. 2020 21:22:22,112  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:302) - Instantiated session factory
 08 Ð¸ÑŽÐ½. 2020 21:22:22,113  [[34mDEBUG[m] [main] (TypeConfiguration.java|:157) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,166  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:22:22,166  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:22:22,204  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:22:22,204  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:22:22,465  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:22:22,466  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:22:22,466  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:22:22,466  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:22:22,486  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:22:22,486  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Author where id =?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,486  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select author_.id, author_.name as name2_0_, author_.second_name as second_n3_0_ from Author author_ where author_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,487  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Author (name, second_name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:22:22,487  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Author set name=?, second_name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,487  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Author where id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,487  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Author (name, second_name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:22:22,507  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d6d775]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,508  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,508  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,508  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:22:22,519  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:22:22,523  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:22:22,525  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,525  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72976b4]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,525  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,525  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,526  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:22:22,526  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:22:22,526  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:22:22,527  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,539  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,539  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,540  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:22:22,541  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Book where id =?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,541  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,541  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:22:22,541  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Book set author_id=?, name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,542  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Book where id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,542  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Book (author_id, name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:22:22,542  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf386c]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,542  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:22:22,543  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,543  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:22:22,543  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:22:22,544  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:22:22,544  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,544  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,544  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:22:22,544  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:22:22,545  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:22:22,545  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:22:22,545  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:22:22,546  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,546  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,546  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,583  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@33188612] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 21:22:22,615  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:151) - Checking 0 named HQL queries
 08 Ð¸ÑŽÐ½. 2020 21:22:22,615  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:167) - Checking 0 named SQL queries
 08 Ð¸ÑŽÐ½. 2020 21:22:22,623  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5df63359
 08 Ð¸ÑŽÐ½. 2020 21:22:22,624  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:74) - Registering SessionFactory: d50c78d4-26cb-4959-98b9-39e37e058c20 (<unnamed>)
 08 Ð¸ÑŽÐ½. 2020 21:22:22,625  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:81) - Not binding SessionFactory to JNDI, no JNDI name configured
 08 Ð¸ÑŽÐ½. 2020 21:22:22,683  [[34mDEBUG[m] [main] (StatisticsInitiator.java|:101) - Statistics initialized [enabled=false]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,698  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_,
        author0_.second_name as second_n3_0_0_ 
    from
        Author author0_ 
    where
        author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:22:22,707  [[34mDEBUG[m] [main] (EntityReferenceInitializerImpl.java|:131) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 08 Ð¸ÑŽÐ½. 2020 21:22:22,718  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,719  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = Ð²Ð°
 08 Ð¸ÑŽÐ½. 2020 21:22:22,719  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:22:22,719  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = 23Ñƒ2
 08 Ð¸ÑŽÐ½. 2020 21:22:22,720  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:22:22,721  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,723  [[34mDEBUG[m] [main] (AbstractLoadPlanBasedEntityLoader.java|:219) - Done entity load : entity.Author#1
 08 Ð¸ÑŽÐ½. 2020 21:22:22,724  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:22:22,750  [[34mDEBUG[m] [main] (CriteriaQueryImpl.java|:299) - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:22:22,765  [[34mDEBUG[m] [main] (QueryTranslatorFactoryInitiator.java|:45) - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7f0b93b4
 08 Ð¸ÑŽÐ½. 2020 21:22:22,799  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:288) - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:22:22,803  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:22:22,811  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:309) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

 08 Ð¸ÑŽÐ½. 2020 21:22:22,835  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:124) - select << begin [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,845  [[34mDEBUG[m] [main] (FromElement.java|:149) - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
 08 Ð¸ÑŽÐ½. 2020 21:22:22,846  [[34mDEBUG[m] [main] (FromReferenceNode.java|:60) - Resolved : generatedAlias0 -> author0_.id
 08 Ð¸ÑŽÐ½. 2020 21:22:22,848  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:128) - select : finishing up [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,848  [[34mDEBUG[m] [main] (HqlSqlWalker.java|:752) - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
 08 Ð¸ÑŽÐ½. 2020 21:22:22,854  [[34mDEBUG[m] [main] (JoinProcessor.java|:128) - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Author): [Author]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Author)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

 08 Ð¸ÑŽÐ½. 2020 21:22:22,857  [[34mDEBUG[m] [main] (JoinProcessor.java|:295) - Using FROM fragment [Author author0_]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,857  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:132) - select >> end [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,858  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:275) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.second_name as second_n3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}

 08 Ð¸ÑŽÐ½. 2020 21:22:22,858  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:22:22,863  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:254) - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:22:22,863  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:255) - SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.second_name as second_n3_0_ from Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:22:22,864  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:22:22,871  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_,
        author0_.name as name2_0_,
        author0_.second_name as second_n3_0_ 
    from
        Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:22:22,877  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 0
 08 Ð¸ÑŽÐ½. 2020 21:22:22,878  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,878  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 1
 08 Ð¸ÑŽÐ½. 2020 21:22:22,879  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,879  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,880  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = ÐŸÑƒÑˆÐºÐ¸Ð½
 08 Ð¸ÑŽÐ½. 2020 21:22:22,880  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:22:22,880  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = Ð¡ÐµÑ€Ð³ÐµÐµÐ²Ð¸Ñ‡
 08 Ð¸ÑŽÐ½. 2020 21:22:22,880  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:22:22,880  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,882  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:22:22,885  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:812) - HHH000031: Closing
 08 Ð¸ÑŽÐ½. 2020 21:22:22,886  [[34mDEBUG[m] [main] (TypeConfiguration.java|:350) - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@88b76f2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,886  [[34mDEBUG[m] [main] (AbstractServiceRegistryImpl.java|:419) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 08 Ð¸ÑŽÐ½. 2020 21:22:22,886  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:22:22,897  [[34mDEBUG[m] [main] (BootstrapServiceRegistryImpl.java|:295) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
 08 Ð¸ÑŽÐ½. 2020 21:35:40,341  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 21:35:40,401  [[34mDEBUG[m] [main] (LoggerProviders.java|:158) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
 08 Ð¸ÑŽÐ½. 2020 21:35:40,419  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:35:40,421  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:35:40,427  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 08 Ð¸ÑŽÐ½. 2020 21:35:40,505  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 21:35:40,507  [[34mDEBUG[m] [main] (Environment.java|:199) - HHH000206: hibernate.properties not found
 08 Ð¸ÑŽÐ½. 2020 21:35:40,747  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:57) - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
 08 Ð¸ÑŽÐ½. 2020 21:35:40,748  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:85) - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
 08 Ð¸ÑŽÐ½. 2020 21:35:40,753  [[34mDEBUG[m] [main] (JaxbCfgProcessor.java|:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
 08 Ð¸ÑŽÐ½. 2020 21:35:41,043  [[34mDEBUG[m] [main] (ServiceBinding.java|:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,059  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:118) - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
 08 Ð¸ÑŽÐ½. 2020 21:35:41,060  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:49) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 08 Ð¸ÑŽÐ½. 2020 21:35:41,084  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,119  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:35:41,119  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:35:41,120  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:35:41,121  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15deb1dc
 08 Ð¸ÑŽÐ½. 2020 21:35:41,121  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a45c42a
 08 Ð¸ÑŽÐ½. 2020 21:35:41,122  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration yes_no -> org.hibernate.type.YesNoType@27a0a5a2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,123  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,124  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,124  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,125  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:35:41,125  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:35:41,126  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:35:41,127  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:35:41,127  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:35:41,127  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:35:41,128  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:35:41,129  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration int -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:35:41,129  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:35:41,130  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,131  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,131  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,132  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,132  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,132  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,134  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:35:41,135  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:35:41,135  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:35:41,136  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:35:41,136  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:35:41,137  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,138  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,139  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration string -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:35:41,139  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:35:41,140  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c05a54d
 08 Ð¸ÑŽÐ½. 2020 21:35:41,140  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10567255
 08 Ð¸ÑŽÐ½. 2020 21:35:41,141  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration url -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:35:41,142  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:35:41,143  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:35:41,143  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:35:41,148  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:35:41,148  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:35:41,150  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:35:41,150  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:35:41,151  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,151  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:35:41,152  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:35:41,153  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:35:41,155  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:35:41,155  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:35:41,156  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:35:41,157  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:35:41,158  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:35:41,158  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:35:41,160  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:35:41,160  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:35:41,161  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:35:41,162  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:35:41,163  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,163  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,163  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:35:41,165  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e8823d2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,166  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,166  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,166  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,167  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30272916
 08 Ð¸ÑŽÐ½. 2020 21:35:41,169  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,169  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,170  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:35:41,171  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:35:41,171  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:35:41,172  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:35:41,173  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,173  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,174  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:35:41,174  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:35:41,175  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@232024b9
 08 Ð¸ÑŽÐ½. 2020 21:35:41,176  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration binary -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:35:41,176  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:35:41,176  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [B -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:35:41,177  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:35:41,177  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:35:41,177  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:35:41,178  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration row_version -> org.hibernate.type.RowVersionType@350b3a17
 08 Ð¸ÑŽÐ½. 2020 21:35:41,179  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration image -> org.hibernate.type.ImageType@1ea9f009
 08 Ð¸ÑŽÐ½. 2020 21:35:41,180  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration characters -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:35:41,180  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char[] -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:35:41,180  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [C -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:35:41,181  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,181  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,182  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,182  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration text -> org.hibernate.type.TextType@7d2a6eac
 08 Ð¸ÑŽÐ½. 2020 21:35:41,183  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ntext -> org.hibernate.type.NTextType@6aa648b9
 08 Ð¸ÑŽÐ½. 2020 21:35:41,184  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,184  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,185  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48d7ad8b
 08 Ð¸ÑŽÐ½. 2020 21:35:41,186  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:35:41,186  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:35:41,188  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nclob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:35:41,188  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:35:41,189  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@737edcfa
 08 Ð¸ÑŽÐ½. 2020 21:35:41,189  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3359c978
 08 Ð¸ÑŽÐ½. 2020 21:35:41,191  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration serializable -> org.hibernate.type.SerializableType@4010d494
 08 Ð¸ÑŽÐ½. 2020 21:35:41,194  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:35:41,194  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:35:41,195  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e63cad
 08 Ð¸ÑŽÐ½. 2020 21:35:41,195  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6759f091
 08 Ð¸ÑŽÐ½. 2020 21:35:41,195  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33a053d
 08 Ð¸ÑŽÐ½. 2020 21:35:41,196  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14a54ef6
 08 Ð¸ÑŽÐ½. 2020 21:35:41,196  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20921b9b
 08 Ð¸ÑŽÐ½. 2020 21:35:41,196  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@867ba60
 08 Ð¸ÑŽÐ½. 2020 21:35:41,196  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ba745bc
 08 Ð¸ÑŽÐ½. 2020 21:35:41,197  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@654b72c0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,230  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,231  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,233  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,233  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,234  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,235  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,236  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,238  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,239  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,240  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,241  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,242  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,242  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,244  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,249  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 21:35:41,250  [[34mDEBUG[m] [main] (DriverManagerConnectionProviderImpl.java|:143) - No driver class specified
 08 Ð¸ÑŽÐ½. 2020 21:35:41,250  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,251  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:121) - HHH10001001: Connection properties: {password=admin, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,251  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,254  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Initializing Connection pool with 1 Connections
 08 Ð¸ÑŽÐ½. 2020 21:35:41,254  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 21:35:41,496  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:72) - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,496  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:83) - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:35:41,496  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:389) - JDBC version : 4.2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,514  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 21:35:41,530  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:113) - JDBC driver metadata reported database stores quoted identifiers in more than one case
 08 Ð¸ÑŽÐ½. 2020 21:35:41,564  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:187) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
 08 Ð¸ÑŽÐ½. 2020 21:35:41,595  [[34mDEBUG[m] [main] (Namespace.java|:51) - Created database namespace [logicalName=Name{catalog=null, schema=testhibernate}, physicalName=Name{catalog=null, schema=testhibernate}]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,598  [[34mDEBUG[m] [main] (TypeConfiguration.java|:152) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cec79d3]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,662  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:35:41,683  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,688  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Author
 08 Ð¸ÑŽÐ½. 2020 21:35:41,696  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Author on table Author
 08 Ð¸ÑŽÐ½. 2020 21:35:41,721  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,724  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,727  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,731  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,733  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,735  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:35:41,736  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,736  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,737  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:name]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,737  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,737  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,737  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=second_name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,738  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property second_name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,738  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:second_name]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,738  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,738  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property second_name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,739  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:35:41,740  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,740  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Book
 08 Ð¸ÑŽÐ½. 2020 21:35:41,740  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Book on table Book
 08 Ð¸ÑŽÐ½. 2020 21:35:41,742  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,743  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,743  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,744  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,744  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,744  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:35:41,745  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,745  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property author_id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,745  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:author_id]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,745  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,746  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property author_id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,746  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,746  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:35:41,746  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:name]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,747  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,747  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,748  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,749  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,749  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,749  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,749  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:35:41,750  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:35:41,751  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [author]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,752  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [book]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,822  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:207) - Building session factory
 08 Ð¸ÑŽÐ½. 2020 21:35:41,823  [[34mDEBUG[m] [main] (Settings.java|:68) - SessionFactory name : null
 08 Ð¸ÑŽÐ½. 2020 21:35:41,823  [[34mDEBUG[m] [main] (Settings.java|:69) - Automatic flush during beforeCompletion(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,823  [[34mDEBUG[m] [main] (Settings.java|:70) - Automatic session close at end of transaction: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,823  [[34mDEBUG[m] [main] (Settings.java|:72) - Statistics: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:74) - Deleted entity synthetic identifier rollback: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:75) - Default entity-mode: pojo
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:76) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:77) - Allow initialization of lazy state outside session : disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:79) - Using BatchFetchStyle : LEGACY
 08 Ð¸ÑŽÐ½. 2020 21:35:41,824  [[34mDEBUG[m] [main] (Settings.java|:80) - Default batch fetch size: -1
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:81) - Maximum outer join fetch depth: 2
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:82) - Default null ordering: NONE
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:83) - Order SQL updates by primary key: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:84) - Order SQL inserts for batching: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:86) - multi-tenancy strategy : NONE
 08 Ð¸ÑŽÐ½. 2020 21:35:41,825  [[34mDEBUG[m] [main] (Settings.java|:88) - JTA Track by Thread: enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,826  [[34mDEBUG[m] [main] (Settings.java|:90) - Query language substitutions: {}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,826  [[34mDEBUG[m] [main] (Settings.java|:91) - Named query checking : enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,826  [[34mDEBUG[m] [main] (Settings.java|:93) - Second-level cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,826  [[34mDEBUG[m] [main] (Settings.java|:94) - Second-level query cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,826  [[34mDEBUG[m] [main] (Settings.java|:95) - Second-level query cache factory: null
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:96) - Second-level cache region prefix: null
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:97) - Optimize second-level cache for minimal puts: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:98) - Structured second-level cache entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:99) - Second-level cache direct-reference entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:100) - Automatic eviction of collection cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,827  [[34mDEBUG[m] [main] (Settings.java|:102) - JDBC batch size: 15
 08 Ð¸ÑŽÐ½. 2020 21:35:41,828  [[34mDEBUG[m] [main] (Settings.java|:103) - JDBC batch updates for versioned data: enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,828  [[34mDEBUG[m] [main] (Settings.java|:104) - Scrollable result sets: enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,828  [[34mDEBUG[m] [main] (Settings.java|:105) - Wrap result sets: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,828  [[34mDEBUG[m] [main] (Settings.java|:106) - JDBC3 getGeneratedKeys(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,828  [[34mDEBUG[m] [main] (Settings.java|:107) - JDBC result set fetch size: null
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:108) - Connection release mode: AFTER_TRANSACTION
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:109) - Generate SQL with comments: disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:111) - JPA compliance - query : disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:112) - JPA compliance - closed-handling : disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:113) - JPA compliance - lists : disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,829  [[34mDEBUG[m] [main] (Settings.java|:114) - JPA compliance - transactions : disabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,887  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:262) - Session factory constructed with filter configurations : {}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,887  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:263) - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.connection.characterEncoding=utf8, java.specification.version=13, sun.jnu.encoding=UTF-8, java.class.path=/Users/aka/IdeaProjects/Hibernate/out/production/classes:/Users/aka/IdeaProjects/Hibernate/out/production/resources:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.4.10.Final/365690f87b040dc5d22cc24a4daff76d1cffef23/hibernate-core-5.4.10.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/mysql/mysql-connector-java/8.0.20/d8d388e71c823570662a45dd33f4284141921280/mysql-connector-java-8.0.20.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.13.3/4e857439fc4fe974d212adaaaa3b118b8b50e3ec/log4j-core-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.13.3/ec1508160b93d274b1add34419b897bae84c6ca9/log4j-api-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.0.Final/700aeedc4a2089816621948f0379e17cbd17d5db/hibernate-commons-annotations-5.1.0.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.3.2.Final/3789d00e859632e6c6206adc0c71625559e6e3b0/jboss-logging-3.3.2.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.persistence/javax.persistence-api/2.2/25665ac8c0b62f50e6488173233239120fc52c96/javax.persistence-api-2.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.javassist/javassist/3.24.0-GA/d7466fc2e3af7c023e95c510f06448ad29b225b3/javassist-3.24.0-GA.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.10.2/7e575b4d8eb3041728fb7dac4fa09bf163c5ee9/byte-buddy-1.10.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/antlr/antlr/2.7.7/83cd2cd674a217ade95a4bb83a8a14f351f48bd0/antlr-2.7.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.spec.javax.transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/a8485cab9484dda36e9a8c319e76b5cc18797b58/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss/jandex/2.1.1.Final/c89aa5564fea8b08b9b41f0bbcabb8fed0d89c0d/jandex-2.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.1/dd6dda9da676a54c5b36ca2806ff95ee017d8738/jaxb-runtime-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.3.1/8531ad5ac454cc2deb9d4d32c40c4d7451939b5d/jaxb-api-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.activation/javax.activation-api/1.2.0/85262acf3ca9816f9537ca47d5adeabaead7cb16/javax.activation-api-1.2.0.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.dom4j/dom4j/2.1.1/3dce5dbb3571aa820c677fadd8349bfa8f00c199/dom4j-2.1.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.google.protobuf/protobuf-java/3.6.1/d06d46ecfd92ec6d0f3b423b4cd81cb38d8b924/protobuf-java-3.6.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.1/a09d2c48d3285f206fafbffe0e50619284e92126/txw2-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.7/c197c86ceec7318b1284bffb49b54226ca774003/istack-commons-runtime-3.0.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jvnet.staxex/stax-ex/1.8/8cc35f73da321c29973191f2cf143d29d26a1df7/stax-ex-1.8.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.xml.fastinfoset/FastInfoset/1.2.15/bb7b7ec0379982b97c62cd17465cb6d9155f68e8/FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=13, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/lib, sun.java.command=Start, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/aka, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, connection.password=admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=13.0.2+8, user.name=aka, path.separator=:, hibernate.connection.username=****, os.version=10.15.5, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, default_schema=testhibernate, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/63/k24jw8mj5s56_mywcdg2zgnr0000gn/T/, java.version=13.0.2, user.dir=/Users/aka/IdeaProjects/Hibernate, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.default_schema=testhibernate, hibernate.connection.password=****, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6944e53e, java.library.path=/Users/aka/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=57.0}
 08 Ð¸ÑŽÐ½. 2020 21:35:41,900  [[34mDEBUG[m] [main] (JaccIntegrator.java|:80) - Skipping JACC integration as it was not enabled
 08 Ð¸ÑŽÐ½. 2020 21:35:41,902  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:302) - Instantiated session factory
 08 Ð¸ÑŽÐ½. 2020 21:35:41,902  [[34mDEBUG[m] [main] (TypeConfiguration.java|:157) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:35:41,949  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:35:41,949  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:35:41,968  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:35:41,969  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:35:42,213  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:35:42,214  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:35:42,215  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:35:42,215  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:35:42,234  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:35:42,235  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Author where id =?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,235  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select author_.id, author_.name as name2_0_, author_.second_name as second_n3_0_ from Author author_ where author_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,235  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Author (name, second_name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:35:42,235  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Author set name=?, second_name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,235  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Author where id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,236  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Author (name, second_name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:35:42,254  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d6d775]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,255  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,255  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,256  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:35:42,265  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:35:42,268  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:35:42,270  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,270  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72976b4]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,270  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,270  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,270  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:35:42,271  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:35:42,271  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:35:42,271  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,282  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,282  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,282  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Book where id =?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Book set author_id=?, name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Book where id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,283  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Book (author_id, name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:35:42,284  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf386c]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,284  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:35:42,284  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,284  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:35:42,284  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:35:42,285  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:35:42,285  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,285  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,285  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:35:42,286  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:35:42,286  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:35:42,286  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:35:42,286  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:35:42,287  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,287  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,287  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,326  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@33188612] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 21:35:42,360  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:151) - Checking 0 named HQL queries
 08 Ð¸ÑŽÐ½. 2020 21:35:42,361  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:167) - Checking 0 named SQL queries
 08 Ð¸ÑŽÐ½. 2020 21:35:42,369  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5df63359
 08 Ð¸ÑŽÐ½. 2020 21:35:42,371  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:74) - Registering SessionFactory: 58572bb8-9cb2-487c-9420-7fb2e8532bf3 (<unnamed>)
 08 Ð¸ÑŽÐ½. 2020 21:35:42,371  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:81) - Not binding SessionFactory to JNDI, no JNDI name configured
 08 Ð¸ÑŽÐ½. 2020 21:35:42,424  [[34mDEBUG[m] [main] (StatisticsInitiator.java|:101) - Statistics initialized [enabled=false]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,438  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_,
        author0_.second_name as second_n3_0_0_ 
    from
        Author author0_ 
    where
        author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:35:42,446  [[34mDEBUG[m] [main] (EntityReferenceInitializerImpl.java|:131) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 08 Ð¸ÑŽÐ½. 2020 21:35:42,456  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,457  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = Ð²Ð°
 08 Ð¸ÑŽÐ½. 2020 21:35:42,457  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:35:42,457  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = 23Ñƒ2
 08 Ð¸ÑŽÐ½. 2020 21:35:42,457  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:35:42,459  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,462  [[34mDEBUG[m] [main] (AbstractLoadPlanBasedEntityLoader.java|:219) - Done entity load : entity.Author#1
 08 Ð¸ÑŽÐ½. 2020 21:35:42,463  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:35:42,487  [[34mDEBUG[m] [main] (CriteriaQueryImpl.java|:299) - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:35:42,503  [[34mDEBUG[m] [main] (QueryTranslatorFactoryInitiator.java|:45) - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7f0b93b4
 08 Ð¸ÑŽÐ½. 2020 21:35:42,535  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:288) - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:35:42,539  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:35:42,546  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:309) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

 08 Ð¸ÑŽÐ½. 2020 21:35:42,565  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:124) - select << begin [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,575  [[34mDEBUG[m] [main] (FromElement.java|:149) - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
 08 Ð¸ÑŽÐ½. 2020 21:35:42,576  [[34mDEBUG[m] [main] (FromReferenceNode.java|:60) - Resolved : generatedAlias0 -> author0_.id
 08 Ð¸ÑŽÐ½. 2020 21:35:42,578  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:128) - select : finishing up [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,578  [[34mDEBUG[m] [main] (HqlSqlWalker.java|:752) - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
 08 Ð¸ÑŽÐ½. 2020 21:35:42,584  [[34mDEBUG[m] [main] (JoinProcessor.java|:128) - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Author): [Author]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Author)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

 08 Ð¸ÑŽÐ½. 2020 21:35:42,587  [[34mDEBUG[m] [main] (JoinProcessor.java|:295) - Using FROM fragment [Author author0_]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,587  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:132) - select >> end [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,588  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:275) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.second_name as second_n3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}

 08 Ð¸ÑŽÐ½. 2020 21:35:42,588  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:35:42,594  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:254) - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:35:42,594  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:255) - SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.second_name as second_n3_0_ from Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:35:42,594  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:35:42,602  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_,
        author0_.name as name2_0_,
        author0_.second_name as second_n3_0_ 
    from
        Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:35:42,608  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 0
 08 Ð¸ÑŽÐ½. 2020 21:35:42,609  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,609  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 1
 08 Ð¸ÑŽÐ½. 2020 21:35:42,609  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,610  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,610  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = ÐŸÑƒÑˆÐºÐ¸Ð½
 08 Ð¸ÑŽÐ½. 2020 21:35:42,610  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:35:42,610  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = Ð¡ÐµÑ€Ð³ÐµÐµÐ²Ð¸Ñ‡
 08 Ð¸ÑŽÐ½. 2020 21:35:42,611  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:35:42,611  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,612  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:35:42,615  [[34mINFO [m] [main] (Start.java|:16) - Ð²Ð°
 08 Ð¸ÑŽÐ½. 2020 21:35:42,615  [[34mINFO [m] [main] (Start.java|:16) - ÐŸÑƒÑˆÐºÐ¸Ð½
 08 Ð¸ÑŽÐ½. 2020 21:35:42,615  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:812) - HHH000031: Closing
 08 Ð¸ÑŽÐ½. 2020 21:35:42,616  [[34mDEBUG[m] [main] (TypeConfiguration.java|:350) - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@88b76f2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,616  [[34mDEBUG[m] [main] (AbstractServiceRegistryImpl.java|:419) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 08 Ð¸ÑŽÐ½. 2020 21:35:42,616  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:35:42,630  [[34mDEBUG[m] [main] (BootstrapServiceRegistryImpl.java|:295) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
 08 Ð¸ÑŽÐ½. 2020 21:36:20,057  [[34mINFO [m] [main] (Start.java|:11) - TEST LOG
 08 Ð¸ÑŽÐ½. 2020 21:36:20,109  [[34mDEBUG[m] [main] (LoggerProviders.java|:158) - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
 08 Ð¸ÑŽÐ½. 2020 21:36:20,127  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:36:20,130  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
 08 Ð¸ÑŽÐ½. 2020 21:36:20,135  [[34mDEBUG[m] [main] (IntegratorServiceImpl.java|:46) - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
 08 Ð¸ÑŽÐ½. 2020 21:36:20,206  [[34mINFO [m] [main] (Version.java|:46) - HHH000412: Hibernate Core {5.4.10.Final}
 08 Ð¸ÑŽÐ½. 2020 21:36:20,208  [[34mDEBUG[m] [main] (Environment.java|:199) - HHH000206: hibernate.properties not found
 08 Ð¸ÑŽÐ½. 2020 21:36:20,412  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:57) - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,413  [[34mDEBUG[m] [main] (LocalXmlResourceResolver.java|:85) - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
 08 Ð¸ÑŽÐ½. 2020 21:36:20,419  [[34mDEBUG[m] [main] (JaxbCfgProcessor.java|:116) - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
 08 Ð¸ÑŽÐ½. 2020 21:36:20,733  [[34mDEBUG[m] [main] (ServiceBinding.java|:68) - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,748  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:118) - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
 08 Ð¸ÑŽÐ½. 2020 21:36:20,749  [[34mDEBUG[m] [main] (RegionFactoryInitiator.java|:49) - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
 08 Ð¸ÑŽÐ½. 2020 21:36:20,771  [[34mINFO [m] [main] (JavaReflectionManager.java|:49) - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
 08 Ð¸ÑŽÐ½. 2020 21:36:20,808  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:36:20,808  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:36:20,809  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4acf72b6
 08 Ð¸ÑŽÐ½. 2020 21:36:20,810  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@15deb1dc
 08 Ð¸ÑŽÐ½. 2020 21:36:20,810  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3a45c42a
 08 Ð¸ÑŽÐ½. 2020 21:36:20,811  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration yes_no -> org.hibernate.type.YesNoType@27a0a5a2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,812  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,813  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,813  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7dd712e8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,814  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:36:20,814  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:36:20,815  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c1e3314
 08 Ð¸ÑŽÐ½. 2020 21:36:20,816  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:36:20,816  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:36:20,816  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50b0bc4c
 08 Ð¸ÑŽÐ½. 2020 21:36:20,817  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:36:20,818  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration int -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:36:20,818  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5f577419
 08 Ð¸ÑŽÐ½. 2020 21:36:20,819  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,820  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,820  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@11ee02f8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,821  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,821  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,821  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77b325b3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,823  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:36:20,824  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:36:20,824  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51abf713
 08 Ð¸ÑŽÐ½. 2020 21:36:20,825  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:36:20,826  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25243bc1
 08 Ð¸ÑŽÐ½. 2020 21:36:20,827  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,827  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@df5f5c0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,828  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration string -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:36:20,829  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.String -> org.hibernate.type.StringType@3b65e559
 08 Ð¸ÑŽÐ½. 2020 21:36:20,830  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c05a54d
 08 Ð¸ÑŽÐ½. 2020 21:36:20,830  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@10567255
 08 Ð¸ÑŽÐ½. 2020 21:36:20,831  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration url -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:36:20,831  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@54336c81
 08 Ð¸ÑŽÐ½. 2020 21:36:20,832  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:36:20,833  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5a12c728
 08 Ð¸ÑŽÐ½. 2020 21:36:20,837  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:36:20,838  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3add81c4
 08 Ð¸ÑŽÐ½. 2020 21:36:20,839  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:36:20,839  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59221b97
 08 Ð¸ÑŽÐ½. 2020 21:36:20,841  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,841  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7cc9ce8
 08 Ð¸ÑŽÐ½. 2020 21:36:20,842  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:36:20,842  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1f2d2181
 08 Ð¸ÑŽÐ½. 2020 21:36:20,844  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:36:20,844  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6c44052e
 08 Ð¸ÑŽÐ½. 2020 21:36:20,845  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:36:20,846  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@9257031
 08 Ð¸ÑŽÐ½. 2020 21:36:20,847  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:36:20,847  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3d9fc57a
 08 Ð¸ÑŽÐ½. 2020 21:36:20,849  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:36:20,849  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54f5f647
 08 Ð¸ÑŽÐ½. 2020 21:36:20,850  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:36:20,850  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38d5b107
 08 Ð¸ÑŽÐ½. 2020 21:36:20,851  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,851  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,852  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@632aa1a3
 08 Ð¸ÑŽÐ½. 2020 21:36:20,853  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1e8823d2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,855  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,855  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,855  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77e2a6e2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,856  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30272916
 08 Ð¸ÑŽÐ½. 2020 21:36:20,857  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,857  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29b732a2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,858  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:36:20,858  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61019f59
 08 Ð¸ÑŽÐ½. 2020 21:36:20,859  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:36:20,860  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f3ddbd9
 08 Ð¸ÑŽÐ½. 2020 21:36:20,861  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,861  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73e132e0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,862  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:36:20,862  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3b0f7d9d
 08 Ð¸ÑŽÐ½. 2020 21:36:20,862  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@232024b9
 08 Ð¸ÑŽÐ½. 2020 21:36:20,863  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration binary -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:36:20,864  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration byte[] -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:36:20,864  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [B -> org.hibernate.type.BinaryType@5fa47fea
 08 Ð¸ÑŽÐ½. 2020 21:36:20,865  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:36:20,865  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:36:20,865  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d666b41
 08 Ð¸ÑŽÐ½. 2020 21:36:20,866  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration row_version -> org.hibernate.type.RowVersionType@350b3a17
 08 Ð¸ÑŽÐ½. 2020 21:36:20,867  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration image -> org.hibernate.type.ImageType@1ea9f009
 08 Ð¸ÑŽÐ½. 2020 21:36:20,868  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration characters -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:36:20,868  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration char[] -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:36:20,868  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [C -> org.hibernate.type.CharArrayType@76f10035
 08 Ð¸ÑŽÐ½. 2020 21:36:20,869  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,869  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,870  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@328572f0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,870  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration text -> org.hibernate.type.TextType@7d2a6eac
 08 Ð¸ÑŽÐ½. 2020 21:36:20,871  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration ntext -> org.hibernate.type.NTextType@6aa648b9
 08 Ð¸ÑŽÐ½. 2020 21:36:20,872  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,872  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f574cc2
 08 Ð¸ÑŽÐ½. 2020 21:36:20,873  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@48d7ad8b
 08 Ð¸ÑŽÐ½. 2020 21:36:20,874  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:36:20,874  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b1637e1
 08 Ð¸ÑŽÐ½. 2020 21:36:20,876  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration nclob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:36:20,877  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ba45490
 08 Ð¸ÑŽÐ½. 2020 21:36:20,878  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@737edcfa
 08 Ð¸ÑŽÐ½. 2020 21:36:20,878  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3359c978
 08 Ð¸ÑŽÐ½. 2020 21:36:20,880  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration serializable -> org.hibernate.type.SerializableType@4010d494
 08 Ð¸ÑŽÐ½. 2020 21:36:20,882  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:36:20,883  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@535b8c24
 08 Ð¸ÑŽÐ½. 2020 21:36:20,883  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e63cad
 08 Ð¸ÑŽÐ½. 2020 21:36:20,884  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6759f091
 08 Ð¸ÑŽÐ½. 2020 21:36:20,884  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@33a053d
 08 Ð¸ÑŽÐ½. 2020 21:36:20,884  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14a54ef6
 08 Ð¸ÑŽÐ½. 2020 21:36:20,884  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@20921b9b
 08 Ð¸ÑŽÐ½. 2020 21:36:20,885  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@867ba60
 08 Ð¸ÑŽÐ½. 2020 21:36:20,885  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ba745bc
 08 Ð¸ÑŽÐ½. 2020 21:36:20,885  [[34mDEBUG[m] [main] (BasicTypeRegistry.java|:156) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@654b72c0
 08 Ð¸ÑŽÐ½. 2020 21:36:20,914  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,915  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,916  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,917  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,917  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,918  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,919  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,921  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,922  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,922  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,923  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,924  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,924  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,925  [[34mDEBUG[m] [main] (DefaultIdentifierGeneratorFactory.java|:81) - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,930  [[33mWARN [m] [main] (DriverManagerConnectionProviderImpl.java|:72) - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
 08 Ð¸ÑŽÐ½. 2020 21:36:20,930  [[34mDEBUG[m] [main] (DriverManagerConnectionProviderImpl.java|:143) - No driver class specified
 08 Ð¸ÑŽÐ½. 2020 21:36:20,931  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:115) - HHH10001005: using driver [null] at URL [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:36:20,931  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:121) - HHH10001001: Connection properties: {password=admin, characterEncoding=utf8, user=root}
 08 Ð¸ÑŽÐ½. 2020 21:36:20,931  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:129) - HHH10001003: Autocommit mode: false
 08 Ð¸ÑŽÐ½. 2020 21:36:20,934  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Initializing Connection pool with 1 Connections
 08 Ð¸ÑŽÐ½. 2020 21:36:20,934  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:249) - HHH000115: Hibernate connection pool size: 20 (min=1)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,176  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:72) - Database ->
       name : MySQL
    version : 8.0.20
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:36:21,176  [[34mDEBUG[m] [main] (JdbcEnvironmentInitiator.java|:83) - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.20 (Revision: afc0a13cd3c5a0bf57eaa809ee0ee6df1fd5ac9b)
      major : 8
      minor : 0
 08 Ð¸ÑŽÐ½. 2020 21:36:21,176  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:389) - JDBC version : 4.2
 08 Ð¸ÑŽÐ½. 2020 21:36:21,198  [[34mINFO [m] [main] (Dialect.java|:172) - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
 08 Ð¸ÑŽÐ½. 2020 21:36:21,214  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:113) - JDBC driver metadata reported database stores quoted identifiers in more than one case
 08 Ð¸ÑŽÐ½. 2020 21:36:21,245  [[34mDEBUG[m] [main] (IdentifierHelperBuilder.java|:187) - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
 08 Ð¸ÑŽÐ½. 2020 21:36:21,274  [[34mDEBUG[m] [main] (Namespace.java|:51) - Created database namespace [logicalName=Name{catalog=null, schema=testhibernate}, physicalName=Name{catalog=null, schema=testhibernate}]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,279  [[34mDEBUG[m] [main] (TypeConfiguration.java|:152) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cec79d3]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,340  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,361  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,369  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,375  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Author on table Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,397  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,400  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,402  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:id]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,405  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,436  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,438  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,439  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,440  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,440  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:name]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,440  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,440  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,441  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Author), mappingColumn=second_name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,441  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property second_name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,441  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Author:second_name]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,441  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,441  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property second_name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,442  [[34mDEBUG[m] [main] (AnnotationBinder.java|:557) - Binding entity from annotated class: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,443  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,443  [[34mDEBUG[m] [main] (EntityBinder.java|:430) - Import with entity name Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,443  [[34mDEBUG[m] [main] (EntityBinder.java|:873) - Bind entity entity.Book on table Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,444  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,444  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,445  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:id]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,445  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,445  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,445  [[34mDEBUG[m] [main] (BinderHelper.java|:644) - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,446  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=author_id, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,447  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property author_id with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,447  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:author_id]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,448  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,448  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property author_id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,448  [[34mDEBUG[m] [main] (Ejb3Column.java|:213) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(testhibernate.Book), mappingColumn=name, insertable=true, updatable=true, unique=false}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,449  [[34mDEBUG[m] [main] (PropertyBinder.java|:175) - MetadataSourceProcessor property name with lazy=false
 08 Ð¸ÑŽÐ½. 2020 21:36:21,449  [[34mDEBUG[m] [main] (AbstractPropertyHolder.java|:94) - Attempting to locate auto-apply AttributeConverter for property [entity.Book:name]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,449  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:411) - building SimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,450  [[34mDEBUG[m] [main] (PropertyBinder.java|:266) - Building property name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,451  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,451  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,451  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for second_name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,451  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,452  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for author_id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,452  [[34mDEBUG[m] [main] (SimpleValueBinder.java|:456) - Starting fillSimpleValue for name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,453  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [author]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,453  [[34mDEBUG[m] [main] (PrimaryKey.java|:35) - Forcing column [id] to be non-null as it is part of the primary key for table [book]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,502  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:207) - Building session factory
 08 Ð¸ÑŽÐ½. 2020 21:36:21,503  [[34mDEBUG[m] [main] (Settings.java|:68) - SessionFactory name : null
 08 Ð¸ÑŽÐ½. 2020 21:36:21,503  [[34mDEBUG[m] [main] (Settings.java|:69) - Automatic flush during beforeCompletion(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,503  [[34mDEBUG[m] [main] (Settings.java|:70) - Automatic session close at end of transaction: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:72) - Statistics: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:74) - Deleted entity synthetic identifier rollback: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:75) - Default entity-mode: pojo
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:76) - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:77) - Allow initialization of lazy state outside session : disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,504  [[34mDEBUG[m] [main] (Settings.java|:79) - Using BatchFetchStyle : LEGACY
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:80) - Default batch fetch size: -1
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:81) - Maximum outer join fetch depth: 2
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:82) - Default null ordering: NONE
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:83) - Order SQL updates by primary key: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:84) - Order SQL inserts for batching: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,505  [[34mDEBUG[m] [main] (Settings.java|:86) - multi-tenancy strategy : NONE
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:88) - JTA Track by Thread: enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:90) - Query language substitutions: {}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:91) - Named query checking : enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:93) - Second-level cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:94) - Second-level query cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,506  [[34mDEBUG[m] [main] (Settings.java|:95) - Second-level query cache factory: null
 08 Ð¸ÑŽÐ½. 2020 21:36:21,507  [[34mDEBUG[m] [main] (Settings.java|:96) - Second-level cache region prefix: null
 08 Ð¸ÑŽÐ½. 2020 21:36:21,507  [[34mDEBUG[m] [main] (Settings.java|:97) - Optimize second-level cache for minimal puts: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,507  [[34mDEBUG[m] [main] (Settings.java|:98) - Structured second-level cache entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,507  [[34mDEBUG[m] [main] (Settings.java|:99) - Second-level cache direct-reference entries: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,508  [[34mDEBUG[m] [main] (Settings.java|:100) - Automatic eviction of collection cache: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,508  [[34mDEBUG[m] [main] (Settings.java|:102) - JDBC batch size: 15
 08 Ð¸ÑŽÐ½. 2020 21:36:21,508  [[34mDEBUG[m] [main] (Settings.java|:103) - JDBC batch updates for versioned data: enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,508  [[34mDEBUG[m] [main] (Settings.java|:104) - Scrollable result sets: enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,509  [[34mDEBUG[m] [main] (Settings.java|:105) - Wrap result sets: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,509  [[34mDEBUG[m] [main] (Settings.java|:106) - JDBC3 getGeneratedKeys(): enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,509  [[34mDEBUG[m] [main] (Settings.java|:107) - JDBC result set fetch size: null
 08 Ð¸ÑŽÐ½. 2020 21:36:21,509  [[34mDEBUG[m] [main] (Settings.java|:108) - Connection release mode: AFTER_TRANSACTION
 08 Ð¸ÑŽÐ½. 2020 21:36:21,510  [[34mDEBUG[m] [main] (Settings.java|:109) - Generate SQL with comments: disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,510  [[34mDEBUG[m] [main] (Settings.java|:111) - JPA compliance - query : disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,510  [[34mDEBUG[m] [main] (Settings.java|:112) - JPA compliance - closed-handling : disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,510  [[34mDEBUG[m] [main] (Settings.java|:113) - JPA compliance - lists : disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,511  [[34mDEBUG[m] [main] (Settings.java|:114) - JPA compliance - transactions : disabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,570  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:262) - Session factory constructed with filter configurations : {}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,571  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:263) - Instantiating session factory with properties: {hibernate.format_sql=true, hibernate.connection.characterEncoding=utf8, java.specification.version=13, sun.jnu.encoding=UTF-8, java.class.path=/Users/aka/IdeaProjects/Hibernate/out/production/classes:/Users/aka/IdeaProjects/Hibernate/out/production/resources:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate/hibernate-core/5.4.10.Final/365690f87b040dc5d22cc24a4daff76d1cffef23/hibernate-core-5.4.10.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/mysql/mysql-connector-java/8.0.20/d8d388e71c823570662a45dd33f4284141921280/mysql-connector-java-8.0.20.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-core/2.13.3/4e857439fc4fe974d212adaaaa3b118b8b50e3ec/log4j-core-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.apache.logging.log4j/log4j-api/2.13.3/ec1508160b93d274b1add34419b897bae84c6ca9/log4j-api-2.13.3.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.hibernate.common/hibernate-commons-annotations/5.1.0.Final/700aeedc4a2089816621948f0379e17cbd17d5db/hibernate-commons-annotations-5.1.0.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.logging/jboss-logging/3.3.2.Final/3789d00e859632e6c6206adc0c71625559e6e3b0/jboss-logging-3.3.2.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.persistence/javax.persistence-api/2.2/25665ac8c0b62f50e6488173233239120fc52c96/javax.persistence-api-2.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.javassist/javassist/3.24.0-GA/d7466fc2e3af7c023e95c510f06448ad29b225b3/javassist-3.24.0-GA.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy/1.10.2/7e575b4d8eb3041728fb7dac4fa09bf163c5ee9/byte-buddy-1.10.2.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/antlr/antlr/2.7.7/83cd2cd674a217ade95a4bb83a8a14f351f48bd0/antlr-2.7.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss.spec.javax.transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/a8485cab9484dda36e9a8c319e76b5cc18797b58/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jboss/jandex/2.1.1.Final/c89aa5564fea8b08b9b41f0bbcabb8fed0d89c0d/jandex-2.1.1.Final.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.fasterxml/classmate/1.5.1/3fe0bed568c62df5e89f4f174c101eab25345b6c/classmate-1.5.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/jaxb-runtime/2.3.1/dd6dda9da676a54c5b36ca2806ff95ee017d8738/jaxb-runtime-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.xml.bind/jaxb-api/2.3.1/8531ad5ac454cc2deb9d4d32c40c4d7451939b5d/jaxb-api-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/javax.activation/javax.activation-api/1.2.0/85262acf3ca9816f9537ca47d5adeabaead7cb16/javax.activation-api-1.2.0.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.dom4j/dom4j/2.1.1/3dce5dbb3571aa820c677fadd8349bfa8f00c199/dom4j-2.1.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.google.protobuf/protobuf-java/3.6.1/d06d46ecfd92ec6d0f3b423b4cd81cb38d8b924/protobuf-java-3.6.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.glassfish.jaxb/txw2/2.3.1/a09d2c48d3285f206fafbffe0e50619284e92126/txw2-2.3.1.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.istack/istack-commons-runtime/3.0.7/c197c86ceec7318b1284bffb49b54226ca774003/istack-commons-runtime-3.0.7.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/org.jvnet.staxex/stax-ex/1.8/8cc35f73da321c29973191f2cf143d29d26a1df7/stax-ex-1.8.jar:/Users/aka/dev_tools/gradle-6.5/caches/modules-2/files-2.1/com.sun.xml.fastinfoset/FastInfoset/1.2.15/bb7b7ec0379982b97c62cd17465cb6d9155f68e8/FastInfoset-1.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=validate, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Moscow, java.vm.specification.version=13, os.name=Mac OS X, sun.java.launcher=SUN_STANDARD, user.country=RU, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home/lib, sun.java.command=Start, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/aka, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-01-14, java.home=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=validate, connection.password=admin, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=13.0.2+8, user.name=aka, path.separator=:, hibernate.connection.username=****, os.version=10.15.5, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, default_schema=testhibernate, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/63/k24jw8mj5s56_mywcdg2zgnr0000gn/T/, java.version=13.0.2, user.dir=/Users/aka/IdeaProjects/Hibernate, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.default_schema=testhibernate, hibernate.connection.password=****, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6944e53e, java.library.path=/Users/aka/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=13.0.2+8, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=57.0}
 08 Ð¸ÑŽÐ½. 2020 21:36:21,584  [[34mDEBUG[m] [main] (JaccIntegrator.java|:80) - Skipping JACC integration as it was not enabled
 08 Ð¸ÑŽÐ½. 2020 21:36:21,585  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:302) - Instantiated session factory
 08 Ð¸ÑŽÐ½. 2020 21:36:21,585  [[34mDEBUG[m] [main] (TypeConfiguration.java|:157) - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@61e3cf4d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,635  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:36:21,635  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,657  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Author] is safe
 08 Ð¸ÑŽÐ½. 2020 21:36:21,658  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,889  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:36:21,890  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,890  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:60) - Not known whether passed class name [entity.Book] is safe
 08 Ð¸ÑŽÐ½. 2020 21:36:21,891  [[34mDEBUG[m] [main] (ClassLoaderAccessImpl.java|:62) - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,911  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Author
 08 Ð¸ÑŽÐ½. 2020 21:36:21,912  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Author where id =?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,912  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select author_.id, author_.name as name2_0_, author_.second_name as second_n3_0_ from Author author_ where author_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,912  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Author (name, second_name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,912  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Author set name=?, second_name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,913  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Author where id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,913  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Author (name, second_name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,933  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d6d775]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,934  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,934  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,934  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:36:21,945  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:36:21,949  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:36:21,951  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [NONE]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,951  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72976b4]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,951  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,951  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : second_name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,952  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:36:21,952  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:36:21,952  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Author)
    - Returns
       - EntityReturnImpl(entity=entity.Author, querySpaceUid=<gen:0>, path=entity.Author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Author)
          - SQL table alias mapping - author0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

 08 Ð¸ÑŽÐ½. 2020 21:36:21,953  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Author [READ]: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,963  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,963  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Author: select author0_.id as id1_0_0_, author0_.name as name2_0_0_, author0_.second_name as second_n3_0_0_ from Author author0_ where author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,964  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3847) - Static SQL for entity: entity.Book
 08 Ð¸ÑŽÐ½. 2020 21:36:21,964  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3852) -  Version select: select id from Book where id =?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,964  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3855) -  Snapshot select: select book_.id, book_.author_id as author_i2_1_, book_.name as name3_1_ from Book book_ where book_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,964  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Insert 0: insert into Book (author_id, name, id) values (?, ?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Update 0: update Book set author_id=?, name=? where id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:394) -  Delete 0: delete from Book where id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (AbstractEntityPersister.java|:3863) -  Identity insert: insert into Book (author_id, name) values (?, ?)
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1faf386c]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,965  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,966  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:36:21,966  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:36:21,966  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:36:21,967  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [NONE]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,967  [[34mDEBUG[m] [main] (QuerySpacesImpl.java|:174) - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a5e167a]
 08 Ð¸ÑŽÐ½. 2020 21:36:21,967  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : author_id
 08 Ð¸ÑŽÐ½. 2020 21:36:21,967  [[34mDEBUG[m] [main] (MetamodelGraphWalker.java|:146) - Visiting attribute path : name
 08 Ð¸ÑŽÐ½. 2020 21:36:21,967  [[34mDEBUG[m] [main] (FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java|:150) - Building LoadPlan...
 08 Ð¸ÑŽÐ½. 2020 21:36:21,968  [[34mDEBUG[m] [main] (LoadQueryJoinAndFetchProcessor.java|:102) - processing queryspace <gen:0>
 08 Ð¸ÑŽÐ½. 2020 21:36:21,968  [[34mDEBUG[m] [main] (LoadPlanTreePrinter.java|:55) - LoadPlan(entity=entity.Book)
    - Returns
       - EntityReturnImpl(entity=entity.Book, querySpaceUid=<gen:0>, path=entity.Book)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Book)
          - SQL table alias mapping - book0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

 08 Ð¸ÑŽÐ½. 2020 21:36:21,968  [[34mDEBUG[m] [main] (EntityLoader.java|:137) - Static select for entity entity.Book [READ]: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,969  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_MERGE on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:21,969  [[34mDEBUG[m] [main] (CascadeEntityLoader.java|:38) - Static select for action ACTION_REFRESH on entity entity.Book: select book0_.id as id1_1_0_, book0_.author_id as author_i2_1_0_, book0_.name as name3_1_0_ from Book book0_ where book0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:22,007  [[34mINFO [m] [main] (DdlTransactionIsolatorNonJtaImpl.java|:47) - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@33188612] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
 08 Ð¸ÑŽÐ½. 2020 21:36:22,037  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:151) - Checking 0 named HQL queries
 08 Ð¸ÑŽÐ½. 2020 21:36:22,038  [[34mDEBUG[m] [main] (NamedQueryRepository.java|:167) - Checking 0 named SQL queries
 08 Ð¸ÑŽÐ½. 2020 21:36:22,047  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:52) - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5df63359
 08 Ð¸ÑŽÐ½. 2020 21:36:22,049  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:74) - Registering SessionFactory: 45fe8a43-e202-4ede-a099-b7b432c4003e (<unnamed>)
 08 Ð¸ÑŽÐ½. 2020 21:36:22,049  [[34mDEBUG[m] [main] (SessionFactoryRegistry.java|:81) - Not binding SessionFactory to JNDI, no JNDI name configured
 08 Ð¸ÑŽÐ½. 2020 21:36:22,100  [[34mDEBUG[m] [main] (StatisticsInitiator.java|:101) - Statistics initialized [enabled=false]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,113  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_0_,
        author0_.name as name2_0_0_,
        author0_.second_name as second_n3_0_0_ 
    from
        Author author0_ 
    where
        author0_.id=?
 08 Ð¸ÑŽÐ½. 2020 21:36:22,122  [[34mDEBUG[m] [main] (EntityReferenceInitializerImpl.java|:131) - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
 08 Ð¸ÑŽÐ½. 2020 21:36:22,134  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,136  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = Ð²Ð°
 08 Ð¸ÑŽÐ½. 2020 21:36:22,136  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:36:22,137  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = 23Ñƒ2
 08 Ð¸ÑŽÐ½. 2020 21:36:22,137  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:36:22,138  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,139  [[34mDEBUG[m] [main] (AbstractLoadPlanBasedEntityLoader.java|:219) - Done entity load : entity.Author#1
 08 Ð¸ÑŽÐ½. 2020 21:36:22,140  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:36:22,166  [[34mDEBUG[m] [main] (CriteriaQueryImpl.java|:299) - Rendered criteria query -> select generatedAlias0 from Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:36:22,180  [[34mDEBUG[m] [main] (QueryTranslatorFactoryInitiator.java|:45) - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7f0b93b4
 08 Ð¸ÑŽÐ½. 2020 21:36:22,215  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:288) - parse() - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:36:22,220  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:36:22,226  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:309) - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Author'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

 08 Ð¸ÑŽÐ½. 2020 21:36:22,245  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:124) - select << begin [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,256  [[34mDEBUG[m] [main] (FromElement.java|:149) - FromClause{level=1} : entity.Author (generatedAlias0) -> author0_
 08 Ð¸ÑŽÐ½. 2020 21:36:22,257  [[34mDEBUG[m] [main] (FromReferenceNode.java|:60) - Resolved : generatedAlias0 -> author0_.id
 08 Ð¸ÑŽÐ½. 2020 21:36:22,258  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:128) - select : finishing up [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,258  [[34mDEBUG[m] [main] (HqlSqlWalker.java|:752) - processQuery() :  ( SELECT ( {select clause} author0_.id ) ( FromClause{level=1} Author author0_ ) )
 08 Ð¸ÑŽÐ½. 2020 21:36:22,264  [[34mDEBUG[m] [main] (JoinProcessor.java|:128) - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Author): [Author]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(entity.Author)
    |  | referencedTables: null
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

 08 Ð¸ÑŽÐ½. 2020 21:36:22,266  [[34mDEBUG[m] [main] (JoinProcessor.java|:295) - Using FROM fragment [Author author0_]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,267  [[34mDEBUG[m] [main] (HqlSqlBaseWalker.java|:132) - select >> end [level=1, statement=select]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,267  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:275) - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Author)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'author0_.id as id1_0_' {alias=generatedAlias0, className=entity.Author, tableAlias=author0_}
    |  \-[SQL_TOKEN] SqlFragment: 'author0_.name as name2_0_, author0_.second_name as second_n3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[author0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Author author0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Author,tableAlias=author0_,origin=null,columns={,className=entity.Author}}

 08 Ð¸ÑŽÐ½. 2020 21:36:22,267  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:36:22,273  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:254) - HQL: select generatedAlias0 from entity.Author as generatedAlias0
 08 Ð¸ÑŽÐ½. 2020 21:36:22,273  [[34mDEBUG[m] [main] (QueryTranslatorImpl.java|:255) - SQL: select author0_.id as id1_0_, author0_.name as name2_0_, author0_.second_name as second_n3_0_ from Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:36:22,273  [[34mDEBUG[m] [main] (ErrorTracker.java|:97) - throwQueryException() : no errors
 08 Ð¸ÑŽÐ½. 2020 21:36:22,281  [[34mDEBUG[m] [main] (SqlStatementLogger.java|:127) - 
    select
        author0_.id as id1_0_,
        author0_.name as name2_0_,
        author0_.second_name as second_n3_0_ 
    from
        Author author0_
 08 Ð¸ÑŽÐ½. 2020 21:36:22,287  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 0
 08 Ð¸ÑŽÐ½. 2020 21:36:22,288  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#1]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,288  [[34mDEBUG[m] [main] (DelegatingBasicLogger.java|:384) - Result set row: 1
 08 Ð¸ÑŽÐ½. 2020 21:36:22,288  [[34mDEBUG[m] [main] (Loader.java|:1586) - Result row: EntityKey[entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:178) - Resolving attributes for [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `name` : value = ÐŸÑƒÑˆÐºÐ¸Ð½
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:190) - Processing attribute `second_name` : value = Ð¡ÐµÑ€Ð³ÐµÐµÐ²Ð¸Ñ‡
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:221) - Attribute (`second_name`)  - enhanced for lazy-loading? - false
 08 Ð¸ÑŽÐ½. 2020 21:36:22,289  [[34mDEBUG[m] [main] (TwoPhaseLoad.java|:342) - Done materializing entity [entity.Author#2]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,291  [[34mDEBUG[m] [main] (LogicalConnectionManagedImpl.java|:159) - Initiating JDBC connection release from afterTransaction
 08 Ð¸ÑŽÐ½. 2020 21:36:22,293  [[33mWARN [m] [main] (Start.java|:16) - Ð²Ð°
 08 Ð¸ÑŽÐ½. 2020 21:36:22,294  [[33mWARN [m] [main] (Start.java|:16) - ÐŸÑƒÑˆÐºÐ¸Ð½
 08 Ð¸ÑŽÐ½. 2020 21:36:22,294  [[34mDEBUG[m] [main] (SessionFactoryImpl.java|:812) - HHH000031: Closing
 08 Ð¸ÑŽÐ½. 2020 21:36:22,295  [[34mDEBUG[m] [main] (TypeConfiguration.java|:350) - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@88b76f2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d43409a]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,295  [[34mDEBUG[m] [main] (AbstractServiceRegistryImpl.java|:419) - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
 08 Ð¸ÑŽÐ½. 2020 21:36:22,295  [[34mINFO [m] [main] (DriverManagerConnectionProviderImpl.java|:418) - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/testhibernate?useSSL=false&serverTimezone=UTC]
 08 Ð¸ÑŽÐ½. 2020 21:36:22,306  [[34mDEBUG[m] [main] (BootstrapServiceRegistryImpl.java|:295) - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
 